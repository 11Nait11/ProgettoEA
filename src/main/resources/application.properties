server.port=8080
# swagger-ui custom path
springdoc.swagger-ui.path=/doc

spring.security.oauth2.client.registration.google.client-id=848981619259-n02o5j0db321am4lbuncr1rul4aiavdj.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

# Postgres JDBC connection properties
spring.datasource.url=jdbc:postgresql://localhost:5432/vinted
spring.datasource.username=postgres
spring.datasource.password=postgres

# Hibernate properties
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.show-sql=true

#crea un db nuovo ad ogni avvio usare update per aggiungere invece di sovrascivere
spring.jpa.hibernate.ddl-auto=create

spring.messages.basename=messages, i18n.list
spring.messages.fallback-to-system-locale=false


springfox.documentation.swagger-ui.enabled=true



management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true

#5 richieste/min, dopo  rifiutate con RequestNotPermitted
#puoi usare @RateLimiter(name = "rateLimiterApi") sui controller(nn necessario presenza di interceptorRatelimit)
resilience4j.ratelimiter.metrics.enabled=true
resilience4j.ratelimiter.instances.rateLimiterApi.register-health-indicator=true
resilience4j.ratelimiter.instances.rateLimiterApi.limit-for-period=5
resilience4j.ratelimiter.instances.rateLimiterApi.limit-refresh-period=60s
resilience4j.ratelimiter.instances.rateLimiterApi.timeout-duration=0s
resilience4j.ratelimiter.instances.rateLimiterApi.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.instances.rateLimiterApi.subscribe-for-events=true
resilience4j.ratelimiter.instances.rateLimiterApi.event-consumer-buffer-size=50

#da eliminare
#spring.security.user.name=ciccio
#spring.security.user.password=ciccio


##TLS
#
#server.port=8443
#server.ssl.enabled=true
#server.ssl.key-store=classpath:projEA.p
#server.ssl.key-store-password=passwd
#server.ssl.keyStoreType=PKCS12
#server.ssl.keyAlias=projEA
#server.ssl.key-password=passwd
#
## SSL protocol to use
#server.ssl.protocol=TLS
## Enabled SSL protocols
#server.ssl.enabled-protocols=TLSv1.2

